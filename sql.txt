create table markets (
	id				serial		primary key,
	creator_id		uuid		not null			references auth.users(id),
	patrons			uuid[]		null,
	name			text		not null,
	description		text		not null,
);


create table shops (
	id				serial		primary key,
	market_id		int			not null			references markets(id) on delete cascade, -- kill the orphans
	name			text		not null,
	description		text		not null,
);

create table items (
	id				serial		primary key,
	shop_id			int			not null			references shops(id) on delete cascade,
	name			text		not null,
	description		text		not null,
	price			int			not null,
);

create table characters (
	id				serial 		primary key,
	player_id		uuid		not null			references auth.users(id)
	market_id		int			not null			references markets(id) on delete cascade,
	invertory		int[]		null,
	name			text		not null,
	gold			int			not null,
)


create policy "Market Owner can see their markets"
on markets
for select
using (
	auth.uid() = markets.creator_id
);


create policy "Logged in patrons can see markets if they belong to the markey 'patrons'."
on markets
for select
using ( 
	auth.uid() = any (markets.patrons)
);


create policy "Patrons can see all shops for markets they have acces to."
on shops
for select
using (
	exists (
		select 1 from markets
		where markets.id = shops.market_id
	)
);

create policy "Patrons can see all items for shops they have acces to."
on shops
for select
using (
	exists (
		select 1 from shops
		where shops.id = items.shop_id
	)
);
